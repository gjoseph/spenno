import { Grid } from "@mui/material";
import * as React from "react";
import { ChartDesc } from "../domain/charting";
import { BarChart } from "./chart/BarChart";
import { PieChart } from "./chart/PieChart";
import { Title } from "./layout/Title";

// ChartType is not in ChartDesc because it isn't generated by data? different chart types may eventually need different layout/style props?
export type ChartType = "pie" | "bar";

export const ChartWrapper: React.FC<{
  type: ChartType;
  chart: ChartDesc;
  containerHeight: number;
}> = (props) => {
  const chart = () => {
    switch (props.type) {
      case "pie":
        return (
          <PieChart
            data={props.chart.data}
            containerHeight={props.containerHeight}
          />
        );
      case "bar":
        return (
          <BarChart
            data={props.chart.data}
            containerHeight={props.containerHeight}
          />
        );
      default:
        throw new Error("Unsupported chart style: " + props.type);
    }
  };

  return (
    <Grid item xs>
      <Title>{props.chart.title}</Title>
      {/*there seems to be a weird bug between <Grid> and <ResponsiveContainer> where when the latter's height*/}
      {/*is set to 100%, it creates an infinitely increasing height. So instead of fiddling around more, I'm just*/}
      {/*passing the height from the parent component, which already has it hardcoded*/}
      {/*Maybe related to https://stackoverflow.com/questions/50891591/recharts-responsive-container-does-not-resize-correctly-in-flexbox*/}
      {/*and https://github.com/recharts/recharts/issues/172*/}
      {chart()}
    </Grid>
  );
};
